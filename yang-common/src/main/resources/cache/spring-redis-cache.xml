<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	   http://www.springframework.org/schema/cache
	   http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
	   http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context.xsd"
       default-lazy-init="true">

    <!-- 扫描 cache包 -->
    <context:component-scan base-package="com.study.yang.base.cache"/>

    <!--引入基础配置 -->
    <import resource="classpath*:cache/redis/spring-redis.xml"/>

    <!-- 缓存服务 -->
    <cache:annotation-driven cache-manager="cacheManager"/>

    <bean id="cacheManager" class="com.study.yang.base.cache.GlobalCacheManager">
        <property name="transactionAware" value="true"/>
        <property name="caches">
            <set>
                <!-- 默认缓存 -->
                <bean class="org.springframework.data.redis.cache.RedisCache">
                    <constructor-arg>
                        <value>default</value>
                    </constructor-arg>
                    <constructor-arg>
                        <!-- prefix 会在 key前添加的前缀 -->
                        <value>yang:default:</value>
                    </constructor-arg>
                    <constructor-arg>
                        <ref bean="redisTemplate"/>
                    </constructor-arg>
                    <constructor-arg>
                        <!--  半小时（单位：秒） -->
                        <value>1800</value>
                    </constructor-arg>
                </bean>

                <!-- authorizationCache的缓存 -->
                <bean class="org.springframework.data.redis.cache.RedisCache">
                    <constructor-arg>
                        <!-- name -->
                        <value>authorizationCache</value>
                    </constructor-arg>
                    <constructor-arg>
                        <!-- prefix 会在 key前添加的前缀 -->
                        <value>yang:authorization:</value>
                    </constructor-arg>
                    <constructor-arg>
                        <ref bean="shiroCacheTemplate"/>
                    </constructor-arg>
                    <constructor-arg>
                        <!-- 半小时 -->
                        <value>1800</value>
                    </constructor-arg>
                </bean>

                <!-- authenticationCache的缓存 -->
                <bean class="org.springframework.data.redis.cache.RedisCache">
                    <constructor-arg>
                        <!-- name -->
                        <value>authenticationCache</value>
                    </constructor-arg>
                    <constructor-arg>
                        <!-- prefix 会在 key前添加的前缀 -->
                        <value>yang:authentication:</value>
                    </constructor-arg>
                    <constructor-arg>
                        <ref bean="shiroCacheTemplate"/>
                    </constructor-arg>
                    <constructor-arg>
                        <!-- 半小时 -->
                        <value>1800</value>
                    </constructor-arg>
                </bean>
            </set>
        </property>
    </bean>

    <bean id="JdkRedisSerializer" class="com.study.yang.base.cache.JdkRedisSerializer"/>

    <bean id="stringSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>

    <bean id="Jackson2JsonRedisSerializer" class="org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer">
        <constructor-arg type="java.lang.Class" value="java.lang.Object"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
        <property name="keySerializer" ref="stringSerializer" />
        <property name="valueSerializer" ref="Jackson2JsonRedisSerializer" />
        <property name="hashKeySerializer" ref="stringSerializer" />
        <property name="hashValueSerializer" ref="Jackson2JsonRedisSerializer" />
    </bean>

    <bean id="shiroCacheTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
        <property name="keySerializer" ref="stringSerializer" />
        <property name="valueSerializer" ref="JdkRedisSerializer" />
    </bean>

</beans>
