<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd"
	   default-lazy-init="true">

	<description>Shiro安全配置</description>

	<!--Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 安全管理器 -->
		<property name="securityManager" ref="securityManager"/>
		<!-- 默认的登陆访问url -->
		<property name="loginUrl" value="/login"/>
		<!-- 登陆成功后跳转的url -->
		<property name="successUrl" value="/home"/>
		<!-- 没有权限跳转的url -->
		<property name="unauthorizedUrl" value="/unauth"/>

		<property name="filterChainDefinitions">
			<value>
				<!--
                    anon  不需要认证
                    authc 需要认证
                    user  验证通过或RememberMe登录的都可以
                -->
				/easyui/** = anon
				/js/** = anon
				/html/** = anon
				/css/** = anon
				/images/** = anon
				/scripts/** = anon
				/monitor/** = anon
				/druid/** = anon
				/login = anon
				/** = anon
			</value>
		</property>
	</bean>

	<!--安全管理器-->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!--设置自定义Realm-->
		<property name="realm" ref="shiroDbRealm"/>
		<!-- 记住密码管理 -->
		<property name="rememberMeManager" ref="rememberMeManager"/>
		<property name="sessionManager" ref="sessionManager"/>
	</bean>

	<!-- 項目自定义的Realm -->
	<bean id="shiroDbRealm" class="com.study.yang.shiro.realm.ShiroDbRealm">
		<constructor-arg index="0" name="cacheManager" ref="shiroSpringCacheManager"/>
		<constructor-arg index="1" name="matcher" ref="credentialsMatcher"/>
		<!-- 启用身份验证缓存，即缓存AuthenticationInfo信息，默认false -->
		<property name="authenticationCachingEnabled" value="true"/>
		<!-- 缓存AuthenticationInfo信息的缓存名称 -->
		<property name="authenticationCacheName" value="authenticationCache"/>
		<!-- 缓存AuthorizationInfo信息的缓存名称 -->
		<property name="authorizationCacheName" value="authorizationCache"/>
	</bean>

	<!-- 密码错误5次锁定半小时 -->
	<bean id="credentialsMatcher" class="com.study.yang.shiro.matcher.RetryLimitCredentialsMatcher">
		<!-- 密码加密 1次md5,增强密码可修改此处 -->
		<property name="hashAlgorithmName" value="md5"/>
		<property name="hashIterations" value="1024"/>
	</bean>

	<!-- rememberMe管理器,cipherKey生成见{@code Base64Test.java} -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('5aaC5qKm5oqA5pyvAAAAAA==')}"/>
		<property name="cookie" ref="rememberMeCookie"/>
	</bean>

	<!-- 记住密码Cookie -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe"/>
		<property name="httpOnly" value="true"/>
		<!-- 7天,采用spring el计算方便修改[细节决定成败]！ -->
		<property name="maxAge" value="#{7 * 24 * 60 * 60}"/>
	</bean>


	<!-- 用户授权信息Cache, 采用spring-cache, 具体请查看spring-redis.xml -->
	<bean id="shiroSpringCacheManager" class="com.study.yang.shiro.cache.ShiroSpringCacheManager">
		<property name="cacheManager" ref="cacheManager"/>
	</bean>

	<!-- 会话管理器 -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- 设置全局会话超时时间 半小时 -->
		<property name="globalSessionTimeout" value="#{30 * 60 * 1000}"/>
		<!-- url上带sessionId 默认为true -->
		<property name="sessionIdUrlRewritingEnabled" value="false"/>
		<property name="sessionDAO" ref="sessionDAO"/>
		<property name="sessionIdCookie" ref="rememberMeCookie"/>
	</bean>

	<!-- 会话DAO 用于会话的CRUD -->
	<bean id="sessionDAO" class="com.study.yang.shiro.session.RedisSessionDao">
		<property name="shiroSessionRepository" ref="shiroSessionRepository"/>
	</bean>
	<bean id="shiroSessionRepository" class="com.study.yang.shiro.cache.RedisShiroSessionRepository">
		<property name="redisTemplate" ref="shiroCacheTemplate"/>
	</bean>


	<!-- 在方法中 注入 securityManager ，进行代理控制 -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
		<property name="arguments" ref="securityManager"/>
	</bean>


	<!-- 启用shrio 控制器授权注解拦截方式 -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"/>
	</bean>

	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

	<!-- AOP式方法级权限检查  -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true"/>
	</bean>

	<import resource="classpath*:cache/spring-redis-cache.xml"/>
</beans>
